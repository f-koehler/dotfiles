- name: Create config directories.
  ansible.builtin.file:
    path: "{{ directory }}"
    state: directory
    mode: "0700"
  loop:
    - "{{ home }}/.zsh.d"
    - "{{ home }}/.zsh.d/plugins"
    - "{{ home }}/.zsh.d/hooks"
  loop_control:
    loop_var: directory

- name: Install plugins.
  ansible.builtin.git:
    accept_hostkey: yes
    dest: "{{ home }}/.zsh.d/plugins/{{ plugin.name }}"
    repo: "{{ plugin.repo }}"
    version: "{{ plugin.version }}"
    update: true
  loop:
    - name: zsh-autopair
      repo: "https://github.com/hlissner/zsh-autopair"
      version: master
    - name: zsh-autosuggestions
      repo: "https://github.com/zsh-users/zsh-autosuggestions.git"
      version: master
    - name: zsh-syntax-highlighting
      repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git"
      version: master
    - name: conda-zsh-completion
      repo: "https://github.com/conda-incubator/conda-zsh-completion"
      version: master
    - name: ohmyzsh
      repo: "https://github.com/ohmyzsh/ohmyzsh"
      version: master
  loop_control:
    loop_var: plugin

- name: Load zsh-autopair hook.
  ansible.builtin.slurp:
    src: "{{ home }}/.zsh.d/plugins/zsh-autopair/autopair.zsh"
  register: zsh_autopair_hook

- name: Register zsh-autopair hook.
  ansible.builtin.set_fact:
    zsh_hooks: "{{ zsh_hooks | combine({'autopair': zsh_autopair_hook.content | b64decode + '\n' + 'autopair-init'}) }}"

- name: Load zsh-autosuggestions hook.
  ansible.builtin.slurp:
    src: "{{ home }}/.zsh.d/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
  register: zsh_autosuggestions_hook

- name: Register zsh-autosuggestions hook.
  ansible.builtin.set_fact:
    zsh_hooks: "{{ zsh_hooks | combine({'autosuggestions': zsh_autosuggestions_hook.content | b64decode}) }}"

- name: Register zsh-syntax-highlighting hook.
  ansible.builtin.set_fact:
    zsh_hooks: "{{ zsh_hooks | combine({'syntax-highlighting': 'source ' + home + '/.zsh.d/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh'}) }}"

- name: Load sudo hook.
  ansible.builtin.slurp:
    src: "{{ home }}/.zsh.d/plugins/ohmyzsh/plugins/sudo/sudo.plugin.zsh"
  register: zsh_sudo_hook

- name: Register sudo hook.
  ansible.builtin.set_fact:
    zsh_hooks: "{{ zsh_hooks | combine({'sudo': zsh_sudo_hook.content | b64decode}) }}"

- name: Load clipboard hook.
  ansible.builtin.slurp:
    src: "{{ home }}/.zsh.d/plugins/ohmyzsh/lib/clipboard.zsh"
  register: zsh_clipboard_hook

- name: Register clipboard hook.
  ansible.builtin.set_fact:
    zsh_hooks: "{{ zsh_hooks | combine({'clipboard': zsh_clipboard_hook.content | b64decode}) }}"

- name: Load copyfile hook.
  ansible.builtin.slurp:
    src: "{{ home }}/.zsh.d/plugins/ohmyzsh/plugins/copyfile/copyfile.plugin.zsh"
  register: zsh_copyfile_hook

- name: Register copyfile hook.
  ansible.builtin.set_fact:
    zsh_hooks: "{{ zsh_hooks | combine({'copyfile': zsh_copyfile_hook.content | b64decode}) }}"

- name: Load dirhistory hook.
  ansible.builtin.slurp:
    src: "{{ home }}/.zsh.d/plugins/ohmyzsh/plugins/dirhistory/dirhistory.plugin.zsh"
  register: zsh_dirhistory_hook

- name: Register dirhistory hook.
  ansible.builtin.set_fact:
    zsh_hooks: "{{ zsh_hooks | combine({'dirhistory': zsh_dirhistory_hook.content | b64decode}) }}"

- name: Store hooks.
  ansible.builtin.template:
    src: hook.zsh
    dest: "{{ home }}/.zsh.d/hooks/{{ hook.key }}.zsh"
    mode: "0600"
    owner: "{{ username }}"
    group: "{{ group }}"
    validate: "{{ zsh_check.found | ternary(zsh_check.path + ' -ef -o pipefail %s', 'true %s') }}"
  loop: "{{ zsh_hooks|dict2items }}"
  loop_control:
    loop_var: hook

- name: Generate zshrc.
  ansible.builtin.template:
    src: "templates/zshrc"
    dest: "{{ home }}/.zshrc"
    mode: "0600"
    validate: "{{ zsh_check.found | ternary(zsh_check.path + ' -ef -o pipefail %s', 'true %s') }}"
