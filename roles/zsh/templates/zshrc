export ZSHD="$HOME/.zsh.d"

[ -f "$HOME/.profile" ] && source "$HOME/.profile"


setopt autocd extendedglob nomatch menucomplete
setopt interactive_comments
zle_highlight=('paste:none')
unsetopt BEEP

# completion system
autoload -Uz compinit
zstyle ':completion:*' menu select
zmodload zsh/complist
_comp_options+=(globdots)

autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

# colors
autoload -Uz colors && colors

# history
setopt appendhistory
setopt histignorealldups

# keybindings
ctrl-z-toggle () {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}

zle -N ctrl-z-toggle
bindkey '^Z' ctrl-z-toggle


bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey "^[[3~" delete-char
bindkey "^[[1;3D" backward-word
bindkey "^[[1;3C" forward-word

# hooks
source <({{ starship_path }} init zsh --print-full-init)
source <({{ direnv_path }} hook zsh)
source <({{ zoxide_path }} init zsh)

source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh


# aliases
{% for alias in aliases %}
alias {{ alias[0] }}="{{ alias[1] }}"
{% endfor %}

# exports
HISTFILE="$HOME/.zsh_history"
HISTSIZE=1000000
SAVEHIST=1000000
HIST_STAMPS="yyyy-mm-dd"

if (( $+commands[pip] )); then
	eval "$(pip completion --zsh)"
fi

[[ -d ${HOME}/.npm-global/bin ]] && export PATH="${HOME}/.npm-global/bin:${PATH}"
[[ -d ${HOME}/.cargo/bin ]] && export PATH="${HOME}/.cargo/bin:${PATH}"

{% for var in environment_variables %}
export {{var}}="{{ environment_variables[var] }}"
{% endfor %}

# functions
function print-colors256 {
    for i in {0..255}; do
        print -Pn "%K{$i} %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%8)):#7}:+$'\n'};
    done
}

function zsh_add_file() {
    [ -f "$ZSHD/$1" ] && source "$ZSHD/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZSHD/plugins/$PLUGIN_NAME" ]; then
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh-theme"
    fi
}

function zsh_add_completion() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZSHD/plugins/$PLUGIN_NAME" ]; then
        # For completions
		completion_file_path=$(ls $ZSHD/plugins/$PLUGIN_NAME/_*)
		fpath+="$(dirname "${completion_file_path}")"
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
    fi
	completion_file="$(basename "${completion_file_path}")"
	if [ "$2" = true ] && compinit "${completion_file:1}"
}


# plugins
zsh_add_plugin "zsh-users/zsh-autosuggestions"
zsh_add_plugin "zsh-users/zsh-syntax-highlighting"
zsh_add_completion "esc/conda-zsh-completion" false

compinit

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('{{ anaconda_prefix }}/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "{{ anaconda_prefix }}/etc/profile.d/conda.sh" ]; then
        . "{{ anaconda_prefix }}/etc/profile.d/conda.sh"
    else
        export PATH="{{ anaconda_prefix }}/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

