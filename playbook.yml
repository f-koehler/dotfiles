- hosts: targets
  ignore_unreachable: yes
  roles:
    - polybar
  tasks:
    - name: symlinks in ~/.config/
      file:
        src: "~/.dotfiles/.config/{{ item }}"
        dest: "~/.config/{{ item }}"
        state: link
        force: yes
        follow: no
      loop:
        - alacritty
        - gtk-3.0
        - htop
        - i3
        - khal
        - kitty
        - mpv
        - nvim
        - offlineimap
        - picom
        - ranger
        - rofi
        - spicetify
        - systemd
        - vdirsyncer
    - name: symlinks in ~/
      file:
        src: "~/.dotfiles/{{ item }}"
        dest: "~/{{ item }}"
        state: link
        force: yes
        follow: no
      loop:
        - .condarc
        - .dir_colors
        - .emacs.d
        - .fzf
        - .gitconfig
        - .mozilla
        - .scripts
        - .xinitrc
        - .zsh.d
        - .Xresources
        - .Xdefaults
    - name: symlink zsh config
      file:
        src: ~/.zsh.d/init.zsh
        dest: ~/.zshrc
        state: link
        force: yes
        follow: no
    - name: symlink p10k config
      file:
        src: ~/.zsh.d/p10k.zsh
        dest: ~/.p10k.zsh
        state: link
        force: yes
        follow: no
    # - name: configure xresources
    #   file:
    #     src: ~/.dotfiles/xresources/src/nord
    #     dest: ~/.Xresources
    #     state: link
    #     force: yes
    #     follow: no
    # - name: configure xdefaults
    #   file:
    #     src: ~/.dotfiles/xresources/src/nord
    #     dest: ~/.Xdefaults
    #     state: link
    #     force: yes
    #     follow: no
    - name: make sure to use ~/.tmux.conf instead of ~/.config/tmux/tmux.conf
      file:
        path: ~/.config/tmux
        state: absent
    - name: link tmux.conf
      file:
        src: ~/.dotfiles/tmux/tmux.conf
        dest: ~/.tmux.conf
        state: link
        force: yes
        follow: no
    - name: link tmux dir
      file:
        src: ~/.dotfiles/tmux/
        dest: ~/.tmux
        state: link
        force: yes
        follow: no
    - name: configure vscodium
      file:
        src: "~/.dotfiles/vscode"
        dest: "~/.config/VSCodium"
        state: link
        force: yes
        follow: no
    - name: configure vscode (OSS)
      file:
        src: "~/.dotfiles/vscode"
        dest: "~/.config/Code - OSS"
        state: link
        force: yes
        follow: no
    - name: configure vscode
      file:
        src: "~/.dotfiles/vscode"
        dest: "~/.config/Code"
        state: link
        force: yes
        follow: no
    - name: check if pipx exists
      stat:
        path: /usr/bin/pipx
      register: pipx_result
    - name: install python packages with pipx
      block:
        - name: install packages with pipx
          command:
            cmd: "pipx install {{ item }}"
            creates: "~/.local/bin/{{ item }}"
          loop:
            - bandit
            - black
            - dephell
            - flake8
            - isort
            - khal
            - mypy
            # - notify-send.py
            - poetry
            - pre-commit
            - pylint
            - tmuxp
            - vdirsyncer
        - name: install fortran-language-server
          command:
            cmd: pipx install fortran-language-server
            creates: "~/.local/bin/fortls"
      when: pipx_result.stat.exists
    - name: Enable systemd user units
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
        scope: user
      loop:
        - gnirehtet.service
        - update-dotfiles-submodules.timer
        - update-flatpaks.timer
    - name: Add flathub flatpak repo
      flatpak_remote:
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        name: flathub
        state: present
        method: user
    - name: Install flatpaks
      flatpak:
        name: "{{ item }}"
        state: present
        method: user
        remote: flathub
      loop:
        - com.leinardi.gwe
        - com.spotify.Client
        - org.musescore.MuseScore
        - us.zoom.Zoom
        - ch.protonmail.protonmail-bridge
    - name: Check if anaconda is installed
      stat:
        path: ~/.local/opt/anaconda3/bin/conda
      register: conda_stat
    - name: Install anaconda
      block:
        - name: Download miniconda installer
          get_url:
            url: "https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"
            dest: ~/.local/miniconda.sh
            mode: "u+x"
        - name: Install miniconda
          command:
            cmd: ~/.local/miniconda.sh -b -p ~/.local/opt/anaconda3 -f
        - name: Remove miniconda installer
          file:
            dest: ~/.local/miniconda.sh
            state: absent
      when: not conda_stat.stat.exists
    - name: Install mamba
      command:
        cmd: ~/.local/opt/anaconda3/bin/conda install -c conda-forge -n base -q -y mamba
        creates: ~/.local/opt/anaconda3/bin/mamba
