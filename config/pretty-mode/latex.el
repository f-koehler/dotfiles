(defvar pretty-mode/latex/regex-post-cmd "[_^\\\n \t(){}]")

(defun substitute-pattern-with-unicode (pattern symbol)
  (interactive)
  (font-lock-add-keywords
   nil `((, pattern (0 (progn
			 (compose-region
			  (match-beginning 1)
			  (match-end 1),
			  symbol
			  'decompose-region)
			 nil))))))

(defun substitute-patterns-with-unicode (patterns)
  (mapcar #'(lambda (x)
	      (substitute-pattern-with-unicode (car x) (cdr x)))
	  patterns))

(defun pretty-mode/latex/begin ()
  (interactive)
  (font-lock-add-keywords
   nil `((, "\\(\\\\begin\\){"
	    (0 (progn
		 (compose-region
		  (match-beginning 1)
		  (match-end 1),
		  "◸"
		  'decompose-region)
		 nil))))))

(defun pretty-mode/latex/end ()
  (interactive)
  (font-lock-add-keywords
   nil `((, "\\(\\\\end\\){"
	    (0 (progn
		 (compose-region
		  (match-beginning 1)
		  (match-end 1),
		  "◺"
		  'decompose-region)
		 nil))))))

(defun pretty-mode/latex/item ()
  (interactive)
  (font-lock-add-keywords
   nil `((, "\\(\\\\item\\)[\n\t ]"
	    (0 (progn
		 (compose-region
		  (match-beginning 1)
		  (match-end 1),
		  "‣"
		  'decompose-region)
		 nil))))))

(defun pretty-mode/latex/simple-regex (cmd)
  (concat "\\(\\\\" cmd "\\)" pretty-mode/latex/regex-post-cmd))

(defun pretty-mode/latex/simple-regexes (cmds)
  (mapcar #'(lambda (x)
	      (cons (pretty-mode/latex/simple-regex (car x)) (cdr x)))
	  cmds))

(defun pretty-mode/latex/mathcal-regex (letter)
  (concat "\\(\\\\mathcal{" letter "}\\)" pretty-mode/latex/regex-post-cmd))

(defun pretty-mode/latex/mathcal-regexes (letters)
  (mapcar #'(lambda (x)
	      (cons (pretty-mode/latex/mathcal-regex (car x)) (cdr x)))
	  letters))

(defun pretty-mode/latex/mathbb-regex (letter)
  (concat "\\(\\\\mathbb{" letter "}\\)" pretty-mode/latex/regex-post-cmd))

(defun pretty-mode/latex/mathbb-regexes (letters)
  (mapcar #'(lambda (x)
	      (cons (pretty-mode/latex/mathbb-regex (car x)) (cdr x)))
	  letters))

(defun pretty-mode/latex/mathfrak-regex (letter)
  (concat "\\(\\\\mathfrak{" letter "}\\)" pretty-mode/latex/regex-post-cmd))

(defun pretty-mode/latex/mathfrak-regexes (letters)
  (mapcar #'(lambda (x)
	      (cons (pretty-mode/latex/mathfrak-regex (car x)) (cdr x)))
	  letters))

(defun pretty-mode/latex/greek-small ()
  (interactive)
  (substitute-patterns-with-unicode
   (pretty-mode/latex/simple-regexes
    (list (cons "alpha"   ?α)
	  (cons "beta"    ?β)
	  (cons "gamma"   ?γ)
	  (cons "delta"   ?δ)
	  (cons "epsilon" ?ε)
	  (cons "zeta"    ?ζ)
	  (cons "eta"     ?η)
	  (cons "theta"   ?θ)
	  (cons "iota"    ?ι)
	  (cons "kappa"   ?κ)
	  (cons "lambda"  ?λ)
	  (cons "mu"      ?μ)
	  (cons "nu"      ?ν)
	  (cons "xi"      ?ξ)
	  (cons "omicron" ?ο)
	  (cons "pi"      ?π)
	  (cons "rho"     ?ρ)
	  (cons "sigma"   ?σ)
	  (cons "tau"     ?τ)
	  (cons "upsilon" ?υ)
	  (cons "varphi"  ?φ)
	  (cons "phi"     ?ϕ)
	  (cons "chi"     ?χ)
	  (cons "psi"     ?ψ)
	  (cons "omega"   ?ω)))))

(defun pretty-mode/latex/greek-capital ()
  (interactive)
  (substitute-patterns-with-unicode
   (pretty-mode/latex/simple-regexes
    (list (cons "Alpha"   ?Α)
	  (cons "Beta"    ?Β)
	  (cons "Gamma"   ?Γ)
	  (cons "Delta"   ?Δ)
	  (cons "Epsilon" ?Ε)
	  (cons "Zeta"    ?Ζ)
	  (cons "Eta"     ?Η)
	  (cons "Theta"   ?Θ)
	  (cons "Iota"    ?Ι)
	  (cons "Kappa"   ?Κ)
	  (cons "Lambda"  ?Λ)
	  (cons "Mu"      ?Μ)
	  (cons "Nu"      ?Ν)
	  (cons "Xi"      ?Ξ)
	  (cons "Omicron" ?Ο)
	  (cons "Pi"      ?Π)
	  (cons "Rho"     ?Ρ)
	  (cons "Sigma"   ?Σ)
	  (cons "Tau"     ?Τ)
	  (cons "Upsilon" ?Υ)
	  (cons "Phi"     ?Φ)
	  (cons "Chi"     ?Χ)
	  (cons "Psi"     ?Ψ)
	  (cons "Omega"   ?Ω)))))

(defun pretty-mode/latex/mathcal ()
  (interactive)
  (substitute-patterns-with-unicode
   (pretty-mode/latex/mathcal-regexes
    (list (cons "A" ?𝒜)
	  (cons "B" ?ℬ)
	  (cons "C" ?𝒞)
	  (cons "D" ?𝒟)
	  (cons "E" ?ℰ)
	  (cons "F" ?ℱ)
	  (cons "G" ?𝒢)
	  (cons "H" ?ℋ)
	  (cons "I" ?ℐ)
	  (cons "J" ?𝒥)
	  (cons "K" ?𝒦)
	  (cons "L" ?ℒ)
	  (cons "M" ?ℳ)
	  (cons "N" ?𝒩)
	  (cons "O" ?𝒪)
	  (cons "P" ?𝒫)
	  (cons "Q" ?𝒬)
	  (cons "R" ?ℛ)
	  (cons "S" ?𝒮)
	  (cons "T" ?𝒯)
	  (cons "U" ?𝒰)
	  (cons "V" ?𝒱)
	  (cons "W" ?𝒲)
	  (cons "X" ?𝒳)
	  (cons "Y" ?𝒴)
	  (cons "Z" ?𝒵)
	  (cons "a" ?𝒶)
	  (cons "b" ?𝒷)
	  (cons "c" ?𝒸)
	  (cons "d" ?𝒹)
	  (cons "e" ?ℯ)
	  (cons "f" ?𝒻)
	  (cons "g" ?ℊ)
	  (cons "h" ?𝒽)
	  (cons "i" ?𝒾)
	  (cons "j" ?𝒿)
	  (cons "k" ?𝓀)
	  (cons "l" ?𝓁)
	  (cons "m" ?𝓂)
	  (cons "n" ?𝓃)
	  (cons "o" ?ℴ)
	  (cons "p" ?𝓅)
	  (cons "q" ?𝓆)
	  (cons "r" ?𝓇)
	  (cons "s" ?𝓈)
	  (cons "t" ?𝓉)
	  (cons "u" ?𝓊)
	  (cons "v" ?𝓋)
	  (cons "w" ?𝓌)
	  (cons "x" ?𝓍)
	  (cons "y" ?𝓎)
	  (cons "z" ?𝓎)))))

(defun pretty-mode/latex/blackboard ()
  (interactive)
  (substitute-patterns-with-unicode
   (pretty-mode/latex/mathbb-regexes
    (list (cons "A" ?𝔸)
	  (cons "B" ?𝔹)
	  (cons "C" ?ℂ)
	  (cons "D" ?𝔻)
	  (cons "E" ?𝔼)
	  (cons "F" ?𝔽)
	  (cons "G" ?𝔾)
	  (cons "H" ?ℍ)
	  (cons "I" ?𝕀)
	  (cons "J" ?𝕁)
	  (cons "K" ?𝕂)
	  (cons "L" ?𝕃)
	  (cons "M" ?𝕄)
	  (cons "N" ?ℕ)
	  (cons "O" ?𝕆)
	  (cons "P" ?ℙ)
	  (cons "Q" ?ℚ)
	  (cons "R" ?ℝ)
	  (cons "S" ?𝕊)
	  (cons "T" ?𝕋)
	  (cons "U" ?𝕌)
	  (cons "V" ?𝕍)
	  (cons "W" ?𝕎)
	  (cons "X" ?𝕏)
	  (cons "X" ?𝕐)
	  (cons "Z" ?ℤ)
	  (cons "a" ?𝕒)
	  (cons "b" ?𝕓)
	  (cons "c" ?𝕔)
	  (cons "d" ?𝕕)
	  (cons "e" ?𝕖)
	  (cons "f" ?𝕗)
	  (cons "g" ?𝕘)
	  (cons "h" ?𝕙)
	  (cons "i" ?𝕚)
	  (cons "j" ?𝕛)
	  (cons "k" ?𝕜)
	  (cons "l" ?𝕝)
	  (cons "m" ?𝕞)
	  (cons "n" ?𝕟)
	  (cons "o" ?𝕠)
	  (cons "p" ?𝕡)
	  (cons "q" ?𝕢)
	  (cons "r" ?𝕣)
	  (cons "s" ?𝕤)
	  (cons "t" ?𝕥)
	  (cons "u" ?𝕦)
	  (cons "v" ?𝕧)
	  (cons "w" ?𝕨)
	  (cons "x" ?𝕩)
	  (cons "x" ?𝕪)
	  (cons "z" ?𝕫)
	  (cons "0" ?𝟘)
	  (cons "1" ?𝟙)
	  (cons "2" ?𝟚)
	  (cons "3" ?𝟛)
	  (cons "4" ?𝟜)
	  (cons "5" ?𝟝)
	  (cons "6" ?𝟞)
	  (cons "7" ?𝟟)
	  (cons "8" ?𝟠)
	  (cons "9" ?𝟡)))))

(defun pretty-mode/latex/mathfrak ()
  (interactive)
  (substitute-patterns-with-unicode
   (pretty-mode/latex/mathfrak-regexes
    (list (cons "A" ?𝔄)
	  (cons "B" ?𝔅)
	  (cons "C" ?ℭ)
	  (cons "D" ?𝔇)
	  (cons "E" ?𝔈)
	  (cons "F" ?𝔉)
	  (cons "G" ?𝔊)
	  (cons "H" ?ℌ)
	  (cons "I" ?ℑ)
	  (cons "J" ?𝔍)
	  (cons "K" ?𝔎)
	  (cons "L" ?𝔏)
	  (cons "M" ?𝔐)
	  (cons "N" ?𝔑)
	  (cons "O" ?𝔒)
	  (cons "P" ?𝕻)
	  (cons "Q" ?𝔔)
	  (cons "R" ?ℜ)
	  (cons "S" ?𝔖)
	  (cons "T" ?𝔗)
	  (cons "U" ?𝔘)
	  (cons "V" ?𝔙)
	  (cons "W" ?𝔚)
	  (cons "X" ?𝔛)
	  (cons "Y" ?𝔜)
	  (cons "Z" ?ℨ)
	  (cons "a" ?𝔞)
	  (cons "b" ?𝔟)
	  (cons "c" ?𝔠)
	  (cons "d" ?𝔡)
	  (cons "e" ?𝔢)
	  (cons "f" ?𝔣)
	  (cons "g" ?𝔤)
	  (cons "h" ?𝔥)
	  (cons "i" ?𝔦)
	  (cons "j" ?𝔧)
	  (cons "k" ?𝔨)
	  (cons "l" ?𝔩)
	  (cons "m" ?𝔪)
	  (cons "n" ?𝔫)
	  (cons "o" ?𝔬)
	  (cons "p" ?𝔭)
	  (cons "q" ?𝔮)
	  (cons "r" ?𝔯)
	  (cons "s" ?𝔰)
	  (cons "t" ?𝔱)
	  (cons "u" ?𝔲)
	  (cons "v" ?𝔳)
	  (cons "w" ?𝔴)
	  (cons "x" ?𝔵)
	  (cons "y" ?𝔶)
	  (cons "z" ?𝔷)))))

(defun pretty-mode/latex/binary-operators ()
  (interactive)
  (substitute-patterns-with-unicode
   (pretty-mode/latex/simple-regexes
    (list
     (cons "pm"              ?±)
     (cons "mp"              ?∓)
     (cons "times"           ?×)
     (cons "circ"            ?⚬)
     (cons "bullet"          ?•)
     (cons "cap"             ?∩)
     (cons "sqcap"           ?⊓)
     (cons "sqcup"           ?⊔)
     (cons "vee"             ?∨)
     (cons "wedge"           ?∧)
     (cons "setminus"        ?∖)
     (cons "diamond"         ?◇)
     (cons "bigtriangleup"   ?△)
     (cons "bigtriangledown" ?▽)
     (cons "triangleleft"    ?◃)
     (cons "triangleright"   ?▹)
     (cons "lhd"             ?◁)
     (cons "rhd"             ?▷)
     (cons "oplus"           ?⊕)
     (cons "otimes"          ?⊗)
     (cons "odot"            ?⊙)
     (cons "bigcirc"         ?◯)
     (cons "dagger"          ?†)
     (cons "ddagger"         ?‡)
     (cons "amalg"           ?⨿)))))

(defun pretty-mode/latex/relations ()
  (interactive)
  (substitute-patterns-with-unicode
   (pretty-mode/latex/simple-regexes
    (list
     (cons "leq"        ?≤)
     (cons "prec"       ?≺)
     (cons "preceq"     ?⪯)
     (cons "ll"         ?≪)
     (cons "subset"     ?⊂)
     (cons "subseteq"   ?⊆)
     (cons "sqsubset"   ?⊏)
     (cons "sqsubset"   ?⊑)
     (cons "in"         ?∈)
     (cons "vdash"      ?⊦)
     (cons "geq"        ?≥)
     (cons "succ"       ?≻)
     (cons "succeq"     ?⪰)
     (cons "gg"         ?≫)
     (cons "supset"     ?⊃)
     (cons "supseteq"   ?⊇)
     (cons "supset"     ?⊐)
     (cons "sqsupseteq" ?⊒)
     (cons "ni"         ?∋)
     (cons "dashv"      ?⊣)
     (cons "equiv"      ?≡)
     (cons "sim"        ?~)
     (cons "simeq"      ?≃)
     (cons "asymp"      ?≍)
     (cons "approx"     ?≈)
     (cons "cong"       ?≅)
     (cons "neq"        ?≠)
     (cons "doteq"      ?≐)
     (cons "propto"     ?∝)
     (cons "models"     ?⊨)
     (cons "perp"       ?⟘)
     (cons "mid"        ?∣)
     (cons "parallel"   ?∥)
     (cons "nparallel"  ?∦)
     (cons "bowtie"     ?⋈)
     (cons "join"       ?⨝)
     (cons "smile"      ?⌣)
     (cons "frown"      ?⌢)))))

(defun pretty-mode/latex/arrows ()
  (interactive)
  (substitute-patterns-with-unicode
   (pretty-mode/latex/simple-regexes
    (list
     (cons "leftarrow"         ?←)
     (cons "rightarrow"        ?→)
     (cons "uparrow"           ?↑)
     (cons "downarrow"         ?↓)
     (cons "Leftarrow"         ?⇐)
     (cons "Rightarrow"        ?⇒)
     (cons "Uparrow"           ?⇑)
     (cons "Downarrow"         ?⇓)
     (cons "leftrightarrow"    ?↔)
     (cons "updownarrow"       ?↕)
     (cons "Leftrightarrow"    ?⇔)
     (cons "Updownarrow"       ?⇕)
     (cons "mapsto"            ?↦)
     (cons "hookleftarrow"     ?↩)
     (cons "hookrightarrow"    ?↪)
     (cons "leftharpoonup"     ?↼)
     (cons "leftharpoondown"   ?↽)
     (cons "rightharpoonup"    ?⇀)
     (cons "rightharpoondown"  ?⇁)
     (cons "rightleftharpoons" ?⇌)
     (cons "leftrightharpoons" ?⇋)
     (cons "leadsto"           ?⤳)
     (cons "nearrow"           ?↗)
     (cons "searrow"           ?↘)
     (cons "swarrow"           ?↙)
     (cons "nwarrow"           ?↖)))))

(defun pretty-mode/latex/misc ()
  (interactive)
  (substitute-patterns-with-unicode
   (pretty-mode/latex/simple-regexes
    (list
     (cons "ldots"    ?…)
     (cons "cdots"    ?⋯)
     (cons "vdots"    ?⋮)
     (cons "ddots"    ?⋱)
     (cons "alpeh"    ?ℵ)
     (cons "hbar"     ?ℏ)
     (cons "emptyset" ?∅)
     (cons "nabla"    ?∇)
     (cons "surd"     ?√)
     (cons "sqrt"     ?√)
     (cons "top"      ?⊤)
     (cons "bot"      ?⊥)
     (cons "forall"   ?∀)
     (cons "exists"   ?∃)
     (cons "neg"      ?¬)
     (cons "partial"  ?∂)
     (cons "infty"    ?∞)
     (cons "Box"      ?☐)
     (cons "int"      ?∫)
     (cons "sum"      ?∑)
     (cons "prod"     ?∏)))))

(defun pretty-mode/latex/integrals ()
  (interactive)
  (substitute-patterns-with-unicode
   (pretty-mode/latex/simple-regexes
    (list
     (cons "int" ?∫)
     (cons "iiiint" ?⨌)
     (cons "iiint" ?∭)
     (cons "iint" ?∬)
     (cons "oint" ?∮)
     (cons "oiint" ?∯)))))


(defun pretty-mode/latex ()
  "Prettify symbols in LaTex mode."
  (pretty-mode/latex/arrows)
  (pretty-mode/latex/binary-operators)
  (pretty-mode/latex/blackboard)
  (pretty-mode/latex/greek-capital)
  (pretty-mode/latex/greek-small)
  (pretty-mode/latex/integrals)
  (pretty-mode/latex/mathcal)
  (pretty-mode/latex/mathfrak)
  (pretty-mode/latex/misc)
  (pretty-mode/latex/relations)
  (pretty-mode/latex/begin)
  (pretty-mode/latex/end)
  (pretty-mode/latex/item)
  )

(add-hook 'tex-mode-hook 'pretty-mode/latex)
(add-hook 'latex-mode-hook 'pretty-mode/latex)
(add-hook 'org-mode-hook 'pretty-mode/latex)
